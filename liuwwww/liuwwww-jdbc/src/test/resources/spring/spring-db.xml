<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd ">
	<context:property-placeholder location="classpath*:/jdbc.properties" /> 
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName}" />
        <property name="url" value="${dataSource.url}" />
        <property name="username" value="root" />
        <property name="password" value="${dataSource.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${dataSource.initialSize}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${dataSource.maxActive}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${dataSource.minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${dataSource.maxWait}" />
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="${dataSource.removeAbandoned}" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat" />
    </bean>
    
    
    <bean name="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName}" />
        <property name="url" value="${dataSource2.url}" />
        <property name="username" value="${dataSource2.username}" />
        <property name="password" value="${dataSource2.password}" />
        <property name="initialSize" value="${dataSource.initialSize}" />
        <property name="maxActive" value="${dataSource.maxActive}" />
        <property name="minIdle" value="${dataSource.minIdle}" />
        <property name="maxWait" value="${dataSource.maxWait}" />
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}" />
        <property name="removeAbandoned" value="${dataSource.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="true" />
        <property name="filters" value="mergeStat" />
    </bean>
 	 <!-- 开启事务控制的注解支持 -->
 	<tx:annotation-driven transaction-manager="transactionManager"/>
 	 <!--自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
 	<context:component-scan base-package="org.liuwww"></context:component-scan>


    <!-- 配置spring的transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    
    <bean id="jdbcTemplate2" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource2"/>
    </bean>
    
    <!-- 事务 -->
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor"
          lazy-init="default" autowire="default">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">-Exception</prop>
                <prop key="save*">-Exception</prop>
                <prop key="modify*">-Exception</prop>
                <prop key="update*">-Exception</prop>
                <prop key="delete*">-Exception</prop>
                <prop key="del*">-Exception</prop>
                <prop key="remove*">-Exception</prop>
                <prop key="load*">readOnly</prop>
                <prop key="find*">readOnly</prop>
                <prop key="query*">readOnly</prop>
                <prop key="get*">readOnly</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" lazy-init="default"
          autowire="default">
        <property name="beanNames">
            <value>*Service,*Test</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>
</beans>